---
- name: Dev Test Playbook
  hosts: ceresdev
  become: true

  vars:
    launch_role_localenv: True
    launch_role_k3s: True
    launch_role_awx: True

  tasks:
  # 
  # Call role ceres_localenv to resize root partition on vm for DEV AWX
  - name: Import role ceres_localenv
    ansible.builtin.import_role:
      name: ceres_localenv
    vars:
      ceres_localenv_resize_disk: True
      ceres_localenv_resize_dev: "/dev/sda"
      ceres_localenv_pkgs_qol_install: True
      ceres_localenv_pkgs_ansible_install: True
    when: launch_role_localenv

  #
  # Call role ceres_k3s to install k3s varient of Kubernetes on vm for DEV AWX
  - name: Import role ceres_k3s
    ansible.builtin.import_role:
      name: ceres_k3s
    vars:
      ceres_k3s_installer_version: "v1.25.6+k3s1"
      ceres_k3s_installer_channel: "stable"
      ceres_k3s_exec_role: "server"
      ceres_k3s_kube_dashboard_install: True
      ceres_k3s_nginx_ingress_install: True
      ceres_k3s_dashboard_ingress_install: True
    when: launch_role_k3s

  #
  # Call role ceres_awx to install awx on vm for DEV AWX
  - name: Import role ceres_awx
    ansible.builtin.import_role:
      name: ceres_awx
    vars:
      ceres_awx_ansible_token: "{{ omit if ceres_k3s_ansible_token is not defined else ceres_k3s_ansible_token }}"
      ceres_awx_oper_install: True
      ceres_awx_ingress_install: True
    when: launch_role_awx

  # Save connection details to local files
  - name: Save Dashboard Ingress Connection Info
    ansible.builtin.copy:
      content: "{{ ceres_k3s_dashboard_ingress_connect.split('\n') }}"
      dest: "connect_to_{{ inventory_hostname }}_dashboard.key"
    delegate_to: localhost
    when: 
      - ceres_k3s_dashboard_ingress_connect is defined
      - ceres_k3s_dashboard_ingress_connect != None
  - name: Save AWX Ingress Connection Info
    ansible.builtin.copy:
      content: "{{ ceres_awx_ingress_connect.split('\n') }}"
      dest: "connect_to_{{ inventory_hostname }}_awx.key"
    delegate_to: localhost
    when: 
      - ceres_awx_ingress_connect is defined
      - ceres_awx_ingress_connect != None

  # Print final status messages
  - name: Print Dashboard Ingress Connection Info
    ansible.builtin.debug:
      msg: "{{ ceres_k3s_dashboard_ingress_connect.split('\n') }}"
      verbosity: 0
    when: 
      - ceres_k3s_dashboard_ingress_connect is defined
      - ceres_k3s_dashboard_ingress_connect != None
  - name: Print AWX Ingress Connection Info
    ansible.builtin.debug:
      msg: "{{ ceres_awx_ingress_connect.split('\n') }}"
      verbosity: 0
    when: 
      - ceres_awx_ingress_connect is defined
      - ceres_awx_ingress_connect != None
