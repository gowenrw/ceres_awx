---
- hosts: localhost
  gather_facts: false
  vars_files:
    - build-vars.yml
  tasks:
    - name: Copy build files to build directory
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "{{ ee_dir }}/"
      with_fileglob: "config-ee*"

    - name: Remove EE context from previous builds
      ansible.builtin.file:
        path: "{{ ee_dir }}/context"
        state: absent

    - name: Create new EE context
      ansible.builtin.shell:
        chdir: "{{ ee_dir }}"
        cmd: "ansible-builder create --file config-ee.yml"

    - name: EE Build Block
      block:
        - name: Build the EE - This can take a LONG time - set a 20min async timeout
          ansible.builtin.shell:
            chdir: "{{ ee_dir }}"
            cmd: "podman build -f context/Containerfile --tag={{ ee_name }}:{{ ee_version }} context"
          async: 1200
          poll: 15
          register: reg_buildee_result
        - name: Tag the new EE build with latest
          ansible.builtin.shell:
            chdir: "{{ ee_dir }}"
            cmd: "podman tag {{ ee_name }}:{{ ee_version }} {{ ee_name }}:latest"
          register: reg_tagee_result
      always:
        # Make sure we prune all the temp images even in a failure
        - name: Prune unused images
          ansible.builtin.shell:
            cmd: "podman image prune -f"
        # Show build results
        - name: "Show build results"
          ansible.builtin.debug:
            var: reg_buildee_result
            # Change this to 1 to suppress output without -v
            verbosity: 0
        # Debug tag latest results
        - name: "Debug tag latest results"
          ansible.builtin.debug:
            var: reg_tagee_result
            verbosity: 1

    - name: Publish the ee image to a container registry
      ansible.builtin.shell:
        cmd: "podman push localhost/{{ ee_name }}:{{ ee_version }} docker://{{ ee_publish_fqdn }}/{{ ee_name }}:{{ ee_version }}"
      when: ee_publish
